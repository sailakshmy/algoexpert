function longestPalindromicSubstring(string) {
  // Write your code here.
let longest = [0,1];
const isPalindromicSubstring = (start,end)=>{
while(start>=0 && end<string.length){
if(string[start]!==string[end])break;
start--;
end++;
}
return [start+1,end];
}
for(let i=0; i<string.length;i++){
let l = i,r=i;
let odd = isPalindromicSubstring(l,r);
l=i,r=i+1;
let even = isPalindromicSubstring(l,r);
console.log(odd,even);
let currentLongest = (odd[1]-odd[0])>(even[1]-even[0])?odd:even;
longest = (currentLongest[1]-currentLongest[0])>(longest[1]-longest[0])?
currentLongest:longest;

}
return string.slice(longest[0],longest[1]);
}

// Do not edit the line below.
exports.longestPalindromicSubstring = longestPalindromicSubstring;
